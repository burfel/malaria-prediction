sp + labs(x = "Total number of reads", y = "Number of pathogen reads")
# Scatter plot with the 2d density estimation
sp + geom_density_2d()
sp + labs(x = "Total number of reads", y = "Number of pathogen reads")
# Scatter plot with the 2d density estimation
sp + geom_density_2d()
png("img/total_reads_outcome.png")
sp <- ggplot(dat, aes(total_reads, outcome)) +
geom_point() +
geom_text(label=rownames(dat))
# Scatter plot with the 2d density estimation
sp + geom_density_2d()
sp + labs(x = "Total number of reads", y = "Number of pathogen reads")
png("img/total_reads_outcome.png")
sp <- ggplot(dat, aes(total_reads, outcome)) +
geom_point() +
geom_text(label=rownames(dat))
# Scatter plot with the 2d density estimation
sp + geom_density_2d()
sp + labs(x = "Total number of reads", y = "Number of pathogen reads")
dev.off()
# Scatter plot with the 2d density estimation
sp + geom_density_2d()
sp + labs(x = "Total number of reads", y = "Number of pathogen reads")
# Scatter plot with the 2d density estimation
sp + geom_density_2d() +
labs(x = "Total number of reads", y = "Number of pathogen reads")
png("img/total_reads_outcome.png")
sp <- ggplot(dat, aes(total_reads, outcome)) +
geom_point() +
geom_text(label=rownames(dat))
# Scatter plot with the 2d density estimation
sp + geom_density_2d() +
labs(x = "Total number of reads", y = "Number of pathogen reads")
dev.off()
png("img/total_reads_outcome_logit.png")
sl <- ggplot(dat, aes(total_reads, outcome.logit)) +
geom_point() +
geom_text(label=rownames(dat))
sl + geom_density_2d() +
labs(x = "Total number of reads", y = "logit(Number of pathogen reads)")
dev.off()
png("img/total_reads_outcome_log.png")
sl <- ggplot(dat, aes(total_reads, log(outcome))) +
geom_point() +
geom_text(label=rownames(dat))
sl + geom_density_2d() +
labs(x = "Total number of reads", y = "log(Number of pathogen reads)")
dev.off()
png("img/total_reads_outcome_log.png")
sl <- ggplot(dat, aes(total_reads, log(outcome))) +
geom_point() +
geom_text(label=rownames(dat))
sl + geom_density_2d() +
labs(x = "Total number of reads", y = "log(Number of pathogen reads)")
dev.off()
#png("img/total_reads_outcome.png")
sp <- ggplot(dat, aes(total_reads, outcome)) +
geom_point() +
geom_text(label=rownames(dat)) +
labs(colour = "Cylinders")
# Scatter plot with the 2d density estimation
sp + geom_density_2d() +
labs(x = "Total number of reads", y = "Number of pathogen reads")
install.packages("png")
install.packages("raster")
library(png)
library(raster)
runApp()
# PLOTS: IS RESPONSE VARIABLE CLOSE TO NORMALITY?
library("ggpubr")
# PLOTS: IS RESPONSE VARIABLE CLOSE TO NORMALITY?
library(ggpubr)
#png("img/pathogen_read_density.png")
ggdensity(dat$outcome,
main = "Density plot of pathogen reads",
xlab = "Percentage of reads that map to pathogen",
ylab = "Density/ quantity of reads")
install.packages("ggpubr")
#png("img/pathogen_read_density.png")
ggdensity(dat$outcome,
main = "Density plot of pathogen reads",
xlab = "Percentage of reads that map to pathogen",
ylab = "Density/ quantity of reads")
# PLOT --- FOR WEBSITE
library(e1071)
#png("img/pathogen_read_density.png")
plot(density(dat$outcome), main="Percentage of reads that map to pathogen", ylab="Density" #, sub=paste("Skewness:", round(e1071::skewness(dat$outcome), 2))
)  # density plot for 'speed'
polygon(density(dat$outcome), col="orange")
#===============================================================================
#                      CORRELATIONS                                            #
#===============================================================================
# CORRELATION MATRIX
library(corrplot)
View(dat.nc.nona)
View(dat.nc.nona)
View(dat.nc.nona)
View(dat.nc.nona)
View(dat)
#===============================================================================
#                      CORRELATIONS                                            #
#===============================================================================
# CORRELATION MATRIX
library(corrplot)
## corrplot 0.84 loaded
par(mfrow = c(2, 2))
my_matrix_nona <- dat.nona[,-c(1,2,16,23,24)]
my_matrix_nc <- dat.nc.nona[,-c(1,2,11,12)]
my_matrix <- dat[,-c(1,2,16,23,24)]
M_nona <- cor(my_matrix_nona, method="pearson")
M_nc <- cor(my_matrix_nc, method="pearson")
M <- cor(my_matrix, method="pearson")
#corrplot(M, method = "square") ### PLOT FOR WEBSITE
#corrplot(M, order = "AOE")
#corrplot(M, order = "hclust") # FOR WEBSITE
#corrplot(M, order = "FPC")
#corrplot(M, order = "alphabet")
#png("shinyapp2/img/correlation.png")
corrplot(M_nona, order = "hclust", addrect = 2) # !!!!!!!!!
corrplot(M_nc, order = "hclust", addrect = 2) # !!!!!!!!!
corrplot(M, order = "hclust", addrect = 2) # !!!!!!!!!
## corrplot 0.84 loaded
par(mfrow = c(1, 1))
#corrplot(M, method = "square") ### PLOT FOR WEBSITE
#corrplot(M, order = "AOE")
#corrplot(M, order = "hclust") # FOR WEBSITE
#corrplot(M, order = "FPC")
#corrplot(M, order = "alphabet")
#png("shinyapp2/img/correlation.png")
corrplot(M_nona, order = "hclust", addrect = 2) # !!!!!!!!!
#corrplot(M, method = "square") ### PLOT FOR WEBSITE
#corrplot(M, order = "AOE")
#corrplot(M, order = "hclust") # FOR WEBSITE
#corrplot(M, order = "FPC")
#corrplot(M, order = "alphabet")
#png("shinyapp2/img/correlation.png")
corrplot(M_nona, order = "hclust", addrect = 2) # !!!!!!!!!
corrplot(M_nc, order = "hclust", addrect = 2) # !!!!!!!!!
corrplot(M, order = "hclust", addrect = 2) # !!!!!!!!!
View(dat.nc.nona)
paras_denc_scal = dat.nc.nona[,3]/10000
paras_denc_scal
dat.nc.nona$Parasite.density...µl. <- paras_denc_scal
View(dat.nc.nona)
dat.nc$Parasite.density...µl. <- dat.nc$Parasite.density...µl./10000
View(dat.nc)
dat$Parasite.density...µl. <- dat$Parasite.density...µl./10000
View(dat)
View(dat.nc)
View(dat.nc.nona)
View(dat.nc.nona.logit)
dat.nc.logit$Parasite.density...µl. <- dat.nc$Parasite.density...µl./10000
dat.nc.nona.logit$Parasite.density...µl. <- dat.nc.nona.logit$Parasite.density...µl./10000
View(dat.nc.nona.logit)
#===============================================================================
#                      SIMPLE REGRESSION MODELS                                #
#===============================================================================
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITHOUT TRANSFORMATION, ON WHOLE DATASET
set.seed(1800)
fit.paras <- lm(dat$outcome ~ dat$Percentage.parasitemia, data=dat)
summary(fit.paras) # # show results: R^2: 0.245, F-stats: 15.28, p-value: 0.0003238
#summary(fit.paras)$sigma^2 # estimated variance of residuals around a fitted line: 0.02366394
# plot the statistics
par(mfrow = c(2, 2))
plot(fit.paras) # diagnostic plots: residuals do not have non-linear patterns, about Normally distributed (except for 35, 39)
#par(mfrow = c(1, 1))
hist(fit.paras$res, main="Residuals") # residuals not really Gaussian
# FOR WEBSITE --- ALSO PLOT
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITHOUT TRANSFORMATION, ON COMPLETE SAMPLES
#set.seed(1801)
fit.nona.paras <- lm(dat.nona$outcome ~ dat.nona$Percentage.parasitemia, data=dat.nona)
summary(fit.nona.paras) # # show results: R^2: 0.4078, F-stats: 13.09, p-value: 0.001834
#===============================================================================
#                      SIMPLE REGRESSION MODELS                                #
#===============================================================================
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITHOUT TRANSFORMATION, ON WHOLE DATASET
set.seed(1800)
fit.paras <- lm(dat$outcome ~ dat$Percentage.parasitemia, data=dat)
summary(fit.paras) # # show results: R^2: 0.245, F-stats: 15.28, p-value: 0.0003238
# FOR WEBSITE --- ALSO PLOT
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITHOUT TRANSFORMATION, ON COMPLETE SAMPLES
set.seed(1800)
fit.nona.paras <- lm(dat.nona$outcome ~ dat.nona$Percentage.parasitemia, data=dat.nona)
summary(fit.nona.paras) # # show results: R^2: 0.4078, F-stats: 13.09, p-value: 0.001834
#===============================================================================
#                      REGRESSION PLOTS                                        #
#===============================================================================
# DEFINE NICE REGRESSION PLOT FUNCTION FOR SIMPLE MODEL
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "blue") +
labs(title = paste("Adjusted R^2 = ",signif(summary(fit)$adj.r.squared, 5),
"; Intercept =",signif(fit$coef[[1]],5 ),
"; Slope =",signif(fit$coef[[2]], 5),
"; P-value =",signif(summary(fit)$coef[2,4], 5)))
}
# DEFINE NICE REGRESSION PLOT FUNCTION FOR COMPLEX MODEL, ie second variable
ggplotRegression2 <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[3], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "blue") +
labs(title = paste("Adj R^2 = ",signif(summary(fit)$adj.r.squared, 5),
"; Intercept =",signif(fit$coef[[1]],5 ),
"; Slope1 =",signif(fit$coef[[2]], 5),
"; Slope2 =",signif(fit$coef[[3]], 5),
"; P-value =",signif(summary(fit)$coef[2,4], 5)))
}
#png("shinyapp2/img/fit_nona_paras_regression.png")
ggplotRegression(fit.nona.paras)
# (1i) plot of observed vs predicted values
# The points should be symmetrically distributed around a diagonal line, with a roughly constant variance.
# Here, the observed (dat$Head) on predicted (or fitted: m$fitted.values)
#png("shinyapp2/img/test1_fitted_outcome.png")
plot(dat.nona$outcome ~ fit.nona.paras$fitted)
#
# #===============================================================================
# #                      SIMPLE REGRESSION MODELS CONT'D                         #
# #===============================================================================
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITHOUT TRANSFORMATION, ON WHOLE DATASET
fit.paras <- lm(dat$outcome ~ dat$Parasite.density...µl., data=dat)
summary(fit.paras) # # show results: R^2: 0.367, F-stats: 25.38
#
# #===============================================================================
# #                      SIMPLE REGRESSION MODELS CONT'D                         #
# #===============================================================================
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITHOUT TRANSFORMATION, ON WHOLE DATASET
set.seed(1800)
fit.paras <- lm(dat$outcome ~ dat$Parasite.density...µl., data=dat)
summary(fit.paras) # # show results: R^2: 0.367, F-stats: 25.38
#summary(fit.paras)$sigma^2 # estimated variance of residuals around a fitted line: 0.02366394
# plot the statistics
par(mfrow = c(2, 2))
plot(fit.paras) # diagnostic plots: residuals do not have non-linear patterns, about Normally distributed (except for 35, 39)
#===============================================================================
#                      SIMPLE REGRESSION MODELS CONT'D                         #
#===============================================================================
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITHOUT TRANSFORMATION, ON WHOLE DATASET
set.seed(1800)
fit.paras <- lm(dat$outcome ~ dat$Parasite.density...µl., data=dat)
summary(fit.paras) # # show results: R^2: 0.367, F-stats: 25.38
View(dat)
#summary(fit.paras)$sigma^2 # estimated variance of residuals around a fitted line: 0.02366394
# plot the statistics
par(mfrow = c(2, 2))
plot(fit.paras) # diagnostic plots: residuals do not have non-linear patterns, about Normally distributed (except for 35, 39)
#par(mfrow = c(1, 1))
#hist(fit.paras$res, main="Residuals") # residuals not really Gaussian
#
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITHOUT TRANSFORMATION, ON COMPLETE SAMPLES
set.seed(1800)
fit.nona.paras.dens <- lm(dat.nona$outcome ~ dat.nona$Parasite.density...µl., data=dat.nona)
summary(fit.nona.paras.dens) # # show results: R^2: 0.3812, F-stats: 13.32
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITH TRANSFORMATION, ON WHOLE DATASET
fit.paras.log <- lm(dat$outcome.logit ~ dat$Percentage.parasitemia, data=dat)
summary(fit.paras.log) # # show results: R^2: 0.1733, F-stats: 10.22, p-value: 0.0026
# FOR WEBSITE --- ALSO PLOT!!!!!!!! -- to compare to non-logit transformation
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITH TRANSFORMATION, ON COMPLETE SAMPLES
fit.nona.paras.log <- lm(dat.nona$outcome.logit ~ dat.nona$Percentage.parasitemia, data=dat.nona)
summary(fit.nona.paras.log) # # show results: R^2: 0.2065, F-stats: 6.205, p-value: 0.02215
#dev.off()
#par(mfrow = c(1, 1))
#hist(fit.nona.paras.log$res,main="Residuals") # residuals not really Gaussian
# MODEL: -7.50325 + 0.08221*dat.nona$Percentage.parasitemia
#png("shinyapp2/img/fit_nona_paras_log_regression.png")
ggplotRegression(fit.nona.paras.log)
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITH TRANSFORMATION, ON WHOLE DATASET
fit.paras.log <- lm(dat$outcome.logit ~ dat$Parasite.density...µl., data=dat)
summary(fit.paras.log) # # show results: R^2: 0.2671, F-stats: 16.31, p-value: 0.0026
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITH TRANSFORMATION, ON WHOLE DATASET
set.seed(1800)
fit.paras.log <- lm(dat$outcome.logit ~ dat$Percentage.parasitemia, data=dat)
summary(fit.paras.log) # # show results: R^2: 0.1733, F-stats: 10.22, p-value: 0.0026
# FOR WEBSITE --- ALSO PLOT!!!!!!!! -- to compare to non-logit transformation
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITH TRANSFORMATION, ON COMPLETE SAMPLES
set.seed(1800)
fit.nona.paras.log <- lm(dat.nona$outcome.logit ~ dat.nona$Percentage.parasitemia, data=dat.nona)
summary(fit.nona.paras.log) # # show results: R^2: 0.2065, F-stats: 6.205, p-value: 0.02215
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITH TRANSFORMATION, ON WHOLE DATASET
set.seed(1800)
fit.paras.log <- lm(dat$outcome.logit ~ dat$Parasite.density...µl., data=dat)
summary(fit.paras.log) # # show results: R^2: 0.2671, F-stats: 16.31, p-value: 0.0026
# FOR WEBSITE --- ALSO PLOT -- to compare to non-logit transformation
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITH TRANSFORMATION, ON COMPLETE SAMPLES
set.seed(1800)
fit.nona.paras.log <- lm(dat.nona$outcome.logit ~ dat.nona$Percentage.parasitemia, data=dat.nona)
summary(fit.nona.paras.log) # # show results: R^2: 0.065, F-stats: 6.205, p-value: 0.02215
# FOR WEBSITE --- ALSO PLOT -- to compare to non-logit transformation
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITH TRANSFORMATION, ON COMPLETE SAMPLES
set.seed(1800)
fit.nona.paras.dens.log <- lm(dat.nona$outcome.logit ~ dat.nona$Parasite.density...µl., data=dat.nona)
summary(fit.nona.paras.dens.log) # # show results: R^2: 0.2509, F-stats: 7.7, p-value: 0.01207
#===============================================================================
#                      SIMPLE REGRESSION MODELS                                #
#===============================================================================
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITHOUT TRANSFORMATION, ON WHOLE DATASET
set.seed(1800)
fit.paras <- lm(dat$outcome ~ dat$Percentage.parasitemia, data=dat)
summary(fit.paras) # # show results: R^2: 0.245, F-stats: 15.28, p-value: 0.0003238
# FOR WEBSITE --- ALSO PLOT
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITHOUT TRANSFORMATION, ON COMPLETE SAMPLES
set.seed(1800)
fit.nona.paras <- lm(dat.nona$outcome ~ dat.nona$Percentage.parasitemia, data=dat.nona)
summary(fit.nona.paras) # # show results: R^2: 0.4078, F-stats: 13.09, p-value: 0.001834
# (2A) MORE COMPLEX MODEL ---- PLOT FOR WEBSITE
set.seed(1800)
fit.nona.total <- lm(dat.nona$outcome ~ dat.nona$Percentage.parasitemia + dat.nona$Total.White.Cell.Count..x109.L., data=dat.nona)
summary(fit.nona.total) # show results: R^2: 0.38, F-stats: 7.13, p-value: 0.005242
# (2) MORE COMPLEX MODEL, DENSITY, WITHOUT LOGIT TRANSFORMATION
set.seed(1800)
fit.nona.total.dens <- lm(dat.nona$outcome ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., data=dat.nona)
summary(fit.nona.total.dens) # show results: R^2: 0.3702, F-stats: 6.878, p-value: 0.006039
# (2) MORE COMPLEX MODEL, DENSITY, WITHOUT LOGIT TRANSFORMATION
set.seed(1800)
fit.nona.total.dens <- lm(dat.nona$outcome ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., data=dat.nona)
summary(fit.nona.total.dens) # show results: R^2: 0.3702, F-stats: 6.878, p-value: 0.006039
# (2) MORE COMPLEX MODEL, DENSITY, WITH LOGIT TRANSFORMATION --- NOT ANY GOOD
set.seed(1800)
fit.nona.total.dens.logit <- lm(dat.nona$outcome.logit ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., data=dat.nona)
summary(fit.nona.total.dens.logit) # show results: R^2: 0.33, F-stats: 5.976, p-value: 0.01022
# # (2B) MORE COMPLEX MODEL, DENSITY --- just with lymphocytes ----FOR WEBSITE
set.seed(1800)# fit.nona.dens.L <- lm(dat.nona$outcome ~ dat.nona$Parasite.density...µl. + dat.nona$Percentage.lymphocytes, data=dat.nona)
# (2B) MORE COMPLEX MODEL --- just with neutrophils ----FOR WEBSITE
set.seed(1800)fit.nona.N <- lm(dat.nona$outcome ~ dat.nona$Percentage.parasitemia + dat.nona$Percentage.neutrophils, data=dat.nona)
# DO WE NEED LOGIT TRANSFORMATION?
model <- glm(outcome_prop ~ dat$total_reads, family=binomial, data=dat.nona)
View(model)
summary(model)
model_log <- glm(outcome_prop ~ log(dat$total_reads), family=binomial, data=dat.nona)
summary(model_log) ## ---> LOGIT TRANSFORMATION / LOGIT LINK NOT NECESSARY
# (1) GLM SIMPLE | PERCENTAGE
glm.paras <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia, family=quasibinomial, data=dat.nona)
glm.paras <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia, family=quasibinomial, data=dat.nona)
summary(glm.paras)
# MODEL: -1.96396 + 0.06550*dat.nona$Percentage.parasitemia
glm.paras.logit <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia, family=binomial(link = 'logit'), data=dat.nona)
summary(glm.paras.logit)
par(mfrow = c(2, 2))
# (1) GLM SIMPLE | DENSITY
glm.paras.dens <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl., family=quasibinomial, data=dat.nona)
summary(glm.paras.dens)
par(mfrow = c(2, 2))
plot(glm.paras.dens)
# MODEL: 2.012e+00 + 2.031e-06*dat.nona$Parasite.density...µl.
glm.paras.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.paras.dens.logit)
par(mfrow = c(2, 2))
plot(glm.paras.dens.logit)
# (2a) GLM COMPLEX | PERCENTAGE | TOTAL WHITE BLOOD CELLS
glm.total <-glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Total.White.Cell.Count..x109.L., family=quasibinomial, data=dat.nona)
View(dat.nona)
dat.nona$Parasite.density...µl. <-dat$Parasite.density...µl./1000
dat.nona$Parasite.density...µl. <-dat.nona$Parasite.density...µl./1000
View(dat.nona)
#par(mfrow = c(1, 1))
#hist(fit.paras$res, main="Residuals") # residuals not really Gaussian
#
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITHOUT TRANSFORMATION, ON COMPLETE SAMPLES
set.seed(1800)
fit.nona.paras.dens <- lm(dat.nona$outcome ~ dat.nona$Parasite.density...µl., data=dat.nona)
summary(fit.nona.paras.dens) # # show results: R^2: 0.3812, F-stats: 13.32, p-value: 0.001703
# DO WE NEED LOGIT TRANSFORMATION?
model <- glm(outcome_prop ~ dat$total_reads, family=binomial, data=dat.nona)
summary(model)
model_log <- glm(outcome_prop ~ log(dat$total_reads), family=binomial, data=dat.nona)
summary(model_log) ## ---> LOGIT TRANSFORMATION / LOGIT LINK NOT NECESSARY
# (1) GLM SIMPLE | PERCENTAGE
set.seed(1800)
glm.paras <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia, family=quasibinomial, data=dat.nona)
glm.paras <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia, family=quasibinomial, data=dat.nona)
summary(glm.paras)
par(mfrow = c(2, 2))
plot(glm.paras)
# MODEL: -1.96396 + 0.06550*dat.nona$Percentage.parasitemia
glm.paras.logit <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia, family=binomial(link = 'logit'), data=dat.nona)
summary(glm.paras.logit)
par(mfrow = c(2, 2))
plot(glm.paras.logit)
# (1) GLM SIMPLE | DENSITY
set.seed(1800)
glm.paras.dens <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl., family=quasibinomial, data=dat.nona)
summary(glm.paras.dens)
par(mfrow = c(2, 2))
plot(glm.paras.dens)
# MODEL: -2.0124996 + 0.0020313*dat.nona$Parasite.density...µl.
glm.paras.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.paras.dens.logit)
par(mfrow = c(2, 2))
plot(glm.paras.dens.logit)
# (2a) GLM COMPLEX | PERCENTAGE | TOTAL WHITE BLOOD CELLS
set.seed(1800)
glm.total <-glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Total.White.Cell.Count..x109.L., family=quasibinomial, data=dat.nona)
summary(glm.total)
# MODEL: -1.11189 + 0.05324*dat.nona$Percentage.parasitemia + (-0.07415)*dat.nona$Total.White.Cell.Count..x109.L.
set.seed(1800)
glm.total.logit <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Total.White.Cell.Count..x109.L., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.total.logit)
# (2a) GLM COMPLEX | DENSITY | TOTAL WHITE BLOOD CELLS
set.seed(1800)
glm.total.dens <-glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., family=quasibinomial, data=dat.nona)
summary(glm.total.dens)
# MODEL: -1.2376972 + 0.0016756*dat.nona$Parasite.density...µl. + (-0.0663774)*dat.nona$Total.White.Cell.Count..x109.L.
set.seed(1800)
glm.total.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.total.dens.logit)
par(mfrow = c(2, 2))
plot(glm.total.dens.logit)
# (2a) GLM COMPLEX | PERCENTAGE | DIFFERENT TYPES OF WHITE BLOOD CELLS COUNTS
glm.total.counts <-glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=quasibinomial, data=dat.nona)
View(dat.nona)
dat.nona$Parasite.density...µl. <-dat.nona$Parasite.density...µl./10
View(dat.nona)
fit.nona.paras.dens <- lm(dat.nona$outcome ~ dat.nona$Parasite.density...µl., data=dat.nona)
summary(fit.nona.paras.dens) # # show results: R^2: 0.3812, F-stats: 13.32, p-value: 0.001703
fit.paras.log <- lm(dat$outcome.logit ~ dat$Parasite.density...µl., data=dat)
summary(fit.paras.log) # # show results: R^2: 0.2671, F-stats: 16.31, p-value: 0.0002301
# FOR WEBSITE --- ALSO PLOT -- to compare to non-logit transformation
# (1) SIMPLEST MODEL (JUST PARASITEMIA), DENSITY, WITH TRANSFORMATION, ON COMPLETE SAMPLES
set.seed(1800)
fit.nona.paras.dens.log <- lm(dat.nona$outcome.logit ~ dat.nona$Parasite.density...µl., data=dat.nona)
summary(fit.nona.paras.dens.log) # # show results: R^2: 0.2509, F-stats: 7.7, p-value: 0.01207
fit.nona.total.dens <- lm(dat.nona$outcome ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., data=dat.nona)
summary(fit.nona.total.dens) # show results: R^2: 0.3702, F-stats: 6.878, p-value: 0.006039
fit.nona.total.dens <- lm(dat.nona$outcome ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., data=dat.nona)
summary(fit.nona.total.dens) # show results: R^2: 0.3702, F-stats: 6.878, p-value: 0.006039
# (1) GLM SIMPLE | DENSITY
set.seed(1800)
glm.paras.dens <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl., family=quasibinomial, data=dat.nona)
summary(glm.paras.dens)
# MODEL: -2.012500 + 0.020313*dat.nona$Parasite.density...µl.
glm.paras.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.paras.dens.logit)
par(mfrow = c(2, 2))
plot(glm.paras.dens.logit)
# MODEL: -2.012500 + 0.020313*dat.nona$Parasite.density...µl.
set.seed(1800)glm.paras.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl., family=binomial(link = 'logit'), data=dat.nona)
# MODEL: -2.012500 + 0.020313*dat.nona$Parasite.density...µl.
set.seed(1800)glm.paras.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.paras.dens.logit)
glm.total.logit <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Total.White.Cell.Count..x109.L., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.total.logit)
# MODEL: -1.11189 + 0.05324*dat.nona$Percentage.parasitemia + (-0.07415)*dat.nona$Total.White.Cell.Count..x109.L.
set.seed(1800)
glm.total.logit <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Total.White.Cell.Count..x109.L., family=binomial(link = 'logit'), data=dat.nona)
View(dat.nona)
# (2a) GLM COMPLEX | DENSITY | TOTAL WHITE BLOOD CELLS
set.seed(1800)
glm.total.dens <-glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., family=quasibinomial, data=dat.nona)
summary(glm.total.dens)
glm.total.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Total.White.Cell.Count..x109.L., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.total.dens.logit)
summary(glm.total.dens)
summary(glm.total.dens.logit)
# (2a) GLM COMPLEX | PERCENTAGE | DIFFERENT TYPES OF WHITE BLOOD CELLS COUNTS
set.seed(1800)glm.total.counts <-glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=quasibinomial, data=dat.nona)
# MODEL: -1.06792 + 0.06155*dat.nona$Percentage.parasitemia + (-0.58256)*dat.nona$Lymphocyte.count...x109.L. + 2.89776*dat.nona$Monocyte.count...x109.L. + (-0.16340)*dat.nona$Neutrophil.count...x109.L.
set.seed(1800)glm.total.counts.logit <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=binomial(link = 'logit'), data=dat.nona)
# (2a) GLM COMPLEX | PERCENTAGE | DIFFERENT TYPES OF WHITE BLOOD CELLS COUNTS
set.seed(1800)glm.total.counts <-glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=quasibinomial, data=dat.nona)
# (2a) GLM COMPLEX | PERCENTAGE | DIFFERENT TYPES OF WHITE BLOOD CELLS COUNTS
set.seed(1800)
glm.total.counts <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=quasibinomial, data=dat.nona)
summary(glm.total.counts)
par(mfrow = c(2, 2))
# MODEL: -1.06792 + 0.06155*dat.nona$Percentage.parasitemia + (-0.58256)*dat.nona$Lymphocyte.count...x109.L. + 2.89776*dat.nona$Monocyte.count...x109.L. + (-0.16340)*dat.nona$Neutrophil.count...x109.L.
set.seed(1800)
glm.total.counts.logit <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.total.counts.logit)
# (2a) GLM COMPLEX | DENSITY | DIFFERENT TYPES OF WHITE BLOOD CELLS COUNTS
glm.total.counts.dens <-glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=quasibinomial, data=dat.nona)
# MODEL: -1.129e+00 + 1.744e-06*dat.nona$Parasite.density...µl. + (-4.876e-01)*dat.nona$Lymphocyte.count...x109.L. + 2.639e+00*dat.nona$Monocyte.count...x109.L. + (-1.666e-01)*dat.nona$Neutrophil.count...x109.L.
set.seed(1800)glm.total.counts.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=binomial(link = 'logit'), data=dat.nona)
# (2a) GLM COMPLEX | DENSITY | DIFFERENT TYPES OF WHITE BLOOD CELLS COUNTS
set.seed(1800)
glm.total.counts.dens <-glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=quasibinomial, data=dat.nona)
summary(glm.total.counts.dens)
glm.total.counts.logit <- glm(outcome_prop.nona ~ dat.nona$Percentage.parasitemia + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.total.counts.logit)
# MODEL: -1.129e+00 + 0.01744*dat.nona$Parasite.density...µl. + (-0.48763)*dat.nona$Lymphocyte.count...x109.L. + 2.63863*dat.nona$Monocyte.count...x109.L. + (-0.16659)*dat.nona$Neutrophil.count...x109.L.
set.seed(1800)
glm.total.counts.dens.logit <- glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=binomial(link = 'logit'), data=dat.nona)
summary(glm.total.counts.dens.logit)
View(dat.nona)
glm.total.counts.dens <-glm(outcome_prop.nona ~ dat.nona$Parasite.density...µl. + dat.nona$Lymphocyte.count...x109.L. + dat.nona$Monocyte.count...x109.L. + dat.nona$Neutrophil.count...x109.L., family=quasibinomial, data=dat.nona)
summary(glm.total.counts.dens)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
devtools::install_github('hadley/ggplot2')
install.packages("devtools")
runApp()
devtools::install_github('hadley/ggplot2')
runApp()
runApp()
remove.packages(devtools, lib)
remove.packages(devtools)
runApp()
