library(shiny); runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
shiny::runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
shiny::runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
shiny::runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
dev.off()
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
#png("../shinyapp4/img/fit_nona_paras_regr.png")
ggplotRegression3(fit.nona.paras, 100)
library(caret)
library(klaR)
library(doParallel)
library(tidyverse)
registerDoParallel(detectCores() - 1)
#===============================================================================
#                               READ IN DATA                                   #
#===============================================================================
# read in files
hg_pf <- read.csv("~/Documents/IMPERIAL/PROJECTS/project2/data/hg_pf_readcounts.csv")
supp <- read.csv("~/Documents/IMPERIAL/PROJECTS/project2/data/Supplementary_Dataset.csv", header=TRUE)
# merge data sets (by samples/ subjectID)
dat <- merge(supp, hg_pf, by.y = "samples", by.x = "Subject.ID")
library(car)
# add column "outcome" which gives the proportion of pathogen reads
dat$total_reads <- dat$pf_count + dat$hg_count
dat$outcome <- dat$pf_count / (dat$hg_count + dat$pf_count)
dat$outcome.logit <-  logit(dat$outcome, percents=TRUE)
outcome_prop <- cbind(dat$pf_count, dat$hg_count)
# most important non-categorical variables
#dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Total.White.Cell.Count..x109.L., Red.blood.cell.count..x1012.L, outcome))
#dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, outcome))
#dat.nc.logit <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, outcome.logit))
dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Lymphocyte.count...x109.L., Monocyte.count...x109.L., Neutrophil.count...x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, hg_count, pf_count, outcome))
dat.nc.logit <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Lymphocyte.count...x109.L., Monocyte.count...x109.L., Neutrophil.count...x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, hg_count, pf_count, outcome.logit))
# drop the samples that have blanks
dat.nona <- na.omit(dat) # 21x27 matrix
dat.nc.nona <- na.omit(dat.nc) # 40x13 matrix (added different white cell type counts, hg_count, pf_count)
dat.nc.nona.logit <- na.omit(dat.nc.logit) # 40x13 matrix
outcome_prop.nona <- cbind(dat.nona$pf_count, dat.nona$hg_count) # 21x2 matrix
outcome_prop.nc.nona <- cbind(dat.nc.nona$pf_count, dat.nc.nona$hg_count) # 40x2 matrix !!!!!!!!!!!!!
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
dev.off()
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/all_regr.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
#===============================================================================
#                               READ IN DATA                                   #
#===============================================================================
# read in files
hg_pf <- read.csv("~/Documents/IMPERIAL/PROJECTS/project2/data/hg_pf_readcounts.csv")
supp <- read.csv("~/Documents/IMPERIAL/PROJECTS/project2/data/Supplementary_Dataset.csv", header=TRUE)
# merge data sets (by samples/ subjectID)
dat <- merge(supp, hg_pf, by.y = "samples", by.x = "Subject.ID")
library(car)
# add column "outcome" which gives the proportion of pathogen reads
dat$total_reads <- dat$pf_count + dat$hg_count
dat$outcome <- dat$pf_count / (dat$hg_count + dat$pf_count)
dat$outcome.logit <-  logit(dat$outcome, percents=TRUE)
outcome_prop <- cbind(dat$pf_count, dat$hg_count)
# most important non-categorical variables
#dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Total.White.Cell.Count..x109.L., Red.blood.cell.count..x1012.L, outcome))
#dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, outcome))
#dat.nc.logit <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, outcome.logit))
dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Lymphocyte.count...x109.L., Monocyte.count...x109.L., Neutrophil.count...x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, hg_count, pf_count, outcome))
dat.nc.logit <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Lymphocyte.count...x109.L., Monocyte.count...x109.L., Neutrophil.count...x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, hg_count, pf_count, outcome.logit))
# drop the samples that have blanks
dat.nona <- na.omit(dat) # 21x27 matrix
dat.nc.nona <- na.omit(dat.nc) # 40x13 matrix (added different white cell type counts, hg_count, pf_count)
dat.nc.nona.logit <- na.omit(dat.nc.logit) # 40x13 matrix
outcome_prop.nona <- cbind(dat.nona$pf_count, dat.nona$hg_count) # 21x2 matrix
outcome_prop.nc.nona <- cbind(dat.nc.nona$pf_count, dat.nc.nona$hg_count) # 40x2 matrix !!!!!!!!!!!!!
#===============================================================================
#                      PLOTS to explore relationships                          #
#===============================================================================
# PLOT PROPORTION OF PATHOGEN READS, BOTH AS NORMAL AND A LOG SCALE -- FOR WEBSITE
par(mfrow = c(1, 2))
#png("img/total_reads_outcome.png")
sp <- ggplot(dat, aes(total_reads, outcome)) +
geom_point() +
geom_text(label=rownames(dat))
# Scatter plot with the 2d density estimation
sp +
# geom_density_2d() +
labs(x = "Total number of reads", y = "Percentage of reads that map to pathogen")
#png("img/total_reads_outcome_logit.png")
sl <- ggplot(dat, aes(total_reads, outcome.logit)) +
geom_point() +
geom_text(label=rownames(dat))
sl + geom_density_2d() +
labs(x = "Total number of reads", y = "logit(Percentage of reads that map to pathogen)")
sl + stat_ellipse()
sl + geom_bin2d()
par(mfrow = c(1, 2))
png("img/parasitemia_outcome.png")
al <- ggplot(dat.nona, aes(Percentage.parasitemia, outcome)) +
geom_point() +
geom_text(label=rownames(dat))
# Scatter plot with the 2d density estimation
al + geom_density_2d() +
labs(x = "Percentage of parasitemia", y = "Percentage of reads mapping to pathogen")
as <- ggplot(dat.nona, aes(Percentage.parasitemia, outcome.logit)) +
geom_point() +
geom_text(label=rownames(dat))
# Scatter plot with the 2d density estimation
as + geom_density_2d() +
labs(x = "Percentage of parasitemia", y = "logit(Percentage of reads mapping to pathogen)")
#sp + stat_ellipse()
#sp + geom_bin2d()
dev.off()
# PLOTS: IS RESPONSE VARIABLE CLOSE TO NORMALITY?
library(ggpubr)
#png("img/pathogen_read_density.png")
ggdensity(dat$outcome,
main = "Density plot of pathogen reads",
xlab = "Percentage of reads that map to pathogen",
ylab = "Density/ quantity of reads")
# PLOT --- FOR WEBSITE
library(e1071)
#png("img/pathogen_read_density.png")
# plot(density(dat$outcome), main="Percentage of reads that map to pathogen", ylab="Density" #, sub=paste("Skewness:", round(e1071::skewness(dat$outcome), 2))
# )  # density plot for 'speed'
plot(density(dat$outcome), main="Distribution of samples whose reads map \n to the host with a certain percentage", ylab="Density of samples", xlab = "Percentage of reads that map to pathogen" #, sub=paste("Skewness:", round(e1071::skewness(dat$outcome), 2))
)
polygon(density(dat$outcome), col="orange")
#===============================================================================
#                      CORRELATIONS                                            #
#===============================================================================
# CORRELATION MATRIX
library(corrplot)
## corrplot 0.84 loaded
par(mfrow = c(1, 1))
my_matrix_nona <- dat.nona[,-c(1,2,16,23,24)]
my_matrix_nc <- dat.nc.nona[,-c(1,2,11,12)]
my_matrix <- dat[,-c(1,2,16,23,24)]
M_nona <- cor(my_matrix_nona, method="pearson")
M_nc <- cor(my_matrix_nc, method="pearson")
M <- cor(my_matrix, method="pearson")
#corrplot(M, method = "square") ### PLOT FOR WEBSITE
#corrplot(M, order = "AOE")
#corrplot(M, order = "hclust") # FOR WEBSITE
#corrplot(M, order = "FPC")
#corrplot(M, order = "alphabet")
#png("shinyapp2/img/correlation.png")
corrplot(M_nona, order = "hclust", addrect = 2) # !!!!!!!!!
corrplot(M_nc, order = "hclust", addrect = 2) # !!!!!!!!!
corrplot(M, order = "hclust", addrect = 2) # !!!!!!!!!
dat$Parasite.density...µl. <- dat$Parasite.density...µl./1000000
dat.nona$Parasite.density...µl. <-dat.nona$Parasite.density...µl./1000000
dat.nc$Parasite.density...µl. <- dat.nc$Parasite.density...µl./1000000
dat.nc.nona$Parasite.density...µl. <- dat.nc.nona$Parasite.density...µl./1000000
dat.nc.logit$Parasite.density...µl. <- dat.nc$Parasite.density...µl./1000000
dat.nc.nona.logit$Parasite.density...µl. <- dat.nc.nona.logit$Parasite.density...µl./1000000
#===============================================================================
#                      SIMPLE REGRESSION MODELS                                #
#===============================================================================
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITHOUT TRANSFORMATION, ON WHOLE DATASET
set.seed(1800)
fit.paras <- lm(dat$outcome ~ dat$Percentage.parasitemia, data=dat)
summary(fit.paras) # # show results: R^2: 0.245, F-stats: 15.28, p-value: 0.0003238 ***
#summary(fit.paras)$sigma^2 # estimated variance of residuals around a fitted line: 0.02366394
# plot the statistics
par(mfrow = c(2, 2))
plot(fit.paras) # diagnostic plots: residuals do not have non-linear patterns, about Normally distributed (except for 35, 39)
#par(mfrow = c(1, 1))
hist(fit.paras$res, main="Residuals") # residuals not really Gaussian
# FOR WEBSITE --- ALSO PLOT
# (1) SIMPLEST MODEL (JUST PARASITEMIA), WITHOUT TRANSFORMATION, ON COMPLETE SAMPLES (on chosen variables)
set.seed(1800)
fit.nona.paras <- lm(dat.nona$outcome ~ dat.nona$Percentage.parasitemia, data=dat.nona)
fit.nc.nona.paras <- lm(dat.nc.nona$outcome ~ dat.nc.nona$Percentage.parasitemia, data=dat.nc.nona)
summary(fit.nona.paras) # # show results: R^2: 0.3767, F-stats: 13.09, p-value: 0.001834 **
summary(fit.nc.nona.paras) # # show results: R^2: 0.2569, F-stats: 14.49, p-value: 0.0004999 ***
#summary(fit.nona.paras)$sigma^2 # estimated variance of residuals around a fitted line: 0.02366394
# plot the statistics
# png("../shinyapp4/img/fit_nona_paras.png")
par(mfrow = c(2, 2))
plot(fit.nona.paras) # diagnostic plots: residuals do not have non-linear patterns, about Normally distributed (except for 35, 39)
# dev.off()
hist(fit.nona.paras$res,main="Residuals") # residuals not really Gaussian
# png("../shinyapp4/img/fit_nc_nona_paras.png")
par(mfrow = c(2, 2))
plot(fit.nc.nona.paras)
#===============================================================================
#                      REGRESSION PLOTS                                        #
#===============================================================================
png("img/paras_outcome_logit.png")
ggplot(dat.nc.nona.logit, aes(Percentage.parasitemia, y=outcome.logit)) +
geom_point() +
geom_text(label=rownames(dat.nc.nona)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1))
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/all_regr.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/all_regr.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
getwd()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/all_regr.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
shiny::runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/all_regr.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
gwd()
getwd()
#setwd("~/Documents/IMPERIAL/PROJECTS/project2/GITHUB/src")
setwd("~/Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4")
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/all_regr.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
runApp()
runApp()
runApp()
