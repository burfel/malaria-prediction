library(shiny); runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp2/shinyApp.R')
shiny::runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
shiny::runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
shiny::runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
runApp('Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4')
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
dev.off()
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
#png("../shinyapp4/img/fit_nona_paras_regr.png")
ggplotRegression3(fit.nona.paras, 100)
library(caret)
library(klaR)
library(doParallel)
library(tidyverse)
registerDoParallel(detectCores() - 1)
#===============================================================================
#                               READ IN DATA                                   #
#===============================================================================
# read in files
hg_pf <- read.csv("~/Documents/IMPERIAL/PROJECTS/project2/data/hg_pf_readcounts.csv")
supp <- read.csv("~/Documents/IMPERIAL/PROJECTS/project2/data/Supplementary_Dataset.csv", header=TRUE)
# merge data sets (by samples/ subjectID)
dat <- merge(supp, hg_pf, by.y = "samples", by.x = "Subject.ID")
library(car)
# add column "outcome" which gives the proportion of pathogen reads
dat$total_reads <- dat$pf_count + dat$hg_count
dat$outcome <- dat$pf_count / (dat$hg_count + dat$pf_count)
dat$outcome.logit <-  logit(dat$outcome, percents=TRUE)
outcome_prop <- cbind(dat$pf_count, dat$hg_count)
# most important non-categorical variables
#dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Total.White.Cell.Count..x109.L., Red.blood.cell.count..x1012.L, outcome))
#dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, outcome))
#dat.nc.logit <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, outcome.logit))
dat.nc <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Lymphocyte.count...x109.L., Monocyte.count...x109.L., Neutrophil.count...x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, hg_count, pf_count, outcome))
dat.nc.logit <- subset(dat, select = c(Subject.ID, Percentage.parasitemia, Parasite.density...µl., Total.White.Cell.Count..x109.L., Lymphocyte.count...x109.L., Monocyte.count...x109.L., Neutrophil.count...x109.L., Percentage.lymphocytes, Percentage.monocytes, Percentage.neutrophils, hg_count, pf_count, outcome.logit))
# drop the samples that have blanks
dat.nona <- na.omit(dat) # 21x27 matrix
dat.nc.nona <- na.omit(dat.nc) # 40x13 matrix (added different white cell type counts, hg_count, pf_count)
dat.nc.nona.logit <- na.omit(dat.nc.logit) # 40x13 matrix
outcome_prop.nona <- cbind(dat.nona$pf_count, dat.nona$hg_count) # 21x2 matrix
outcome_prop.nc.nona <- cbind(dat.nc.nona$pf_count, dat.nc.nona$hg_count) # 40x2 matrix !!!!!!!!!!!!!
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("../shinyapp4/img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/both_paras_regr_better_outlier_4.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
dev.off()
dev.off()
###################----PLOTS--------!!!!!!!!!!!!!!!!!!!!!!!!!!!!
png("img/all_regr.png", width = 1000, height = 600)
ggplot(dat.nc.nona, aes(Percentage.parasitemia, outcome)) +
scale_x_continuous(name="Percentage of parasitemia", limits=c(0,50)) +  ## -- with it pdenstiy does not show up
scale_y_continuous(name="Percentage of reads mapping to pathogen", limits=c(0,1)) +
geom_text(label=rownames(dat.nc.nona)) +
geom_point(colour="dodgerblue",alpha=0.75) +
geom_abline(aes(colour="linear model on complete \n samples (21) \n", intercept=0.090267, slope=0.013339), alpha=1, size=1) +
geom_smooth(aes(colour="linear model on samples that complete \n after variable selection (40) \n"), method = "lm", linetype="dashed", se=FALSE) +
geom_smooth(data = dat.nc.nona[-c(29,33),], aes(colour="linear model without \n potential outliers 35,39 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14),], aes(colour="linear model without \n potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
geom_smooth(data = dat.nc.nona[-c(5,8,9,14,29,33),], aes(colour="linear model without \n potential outliers 7,10,11,19,35,39 \n"), method="lm", se=F, linetype = "dashed") +
#geom_smooth(data = dat.nc.nona[c(7,10,11,19),], aes(colour="linear model without potential outliers 7,10,11,19 \n"), method="lm", se=F, linetype = "dashed") +
scale_colour_manual(name="Linear regression lines \n", values=c("red", "blue", "orange", "green", "brown")) +
guides(colour = guide_legend(override.aes = list(alpha = 0))) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold")) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=15),
legend.text=element_text(size=13))
dev.off()
setwd("~/Documents/IMPERIAL/PROJECTS/project2/GITHUB/shinyapp4")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?anova
anova(glm.paras.dens.logit, glm.paras.dens.logit, type="rao")
anova(glm.paras.dens.logit, glm.paras.dens.logit, type="Rao")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
